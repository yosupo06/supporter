name: Problems-Deploy

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true
      force:
        type: boolean
        default: false
      problems-branch:
        type: string
        default: master
  workflow_dispatch:
    inputs:
      env:
        type: string
        default: dev
        description: environment of deploy
      force:
        type: boolean
        default: false
        description: force upload
      problems-branch:
        type: string
        default: master
        description: branch of library-checker-problems

concurrency:
  group: ${{ inputs.env }}-problems-deploy
  cancel-in-progress: true

jobs:
  problems-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: yosupo06/library-checker-problems
          path: library-checker-problems
          ref: ${{ inputs.problems-branch }}

      - id: gen-protoc
        name: Generate protoc
        run: ./api/gen_protoc.sh

      - id: pip-setup
        run: pip3 install -r ./library-checker-problems/requirements.txt

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: projects/190778459730/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service_account: problems-deployer@library-checker-project.iam.gserviceaccount.com
          token_format: access_token

      - id: secrets
        uses: google-github-actions/get-secretmanager-secrets@v1
        with:
          secrets: |-
            pg-user:library-checker-project/${{ inputs.env }}-pg-user/latest
            pg-pass:library-checker-project/${{ inputs.env }}-pg-pass/latest
            pg-table:library-checker-project/${{ inputs.env }}-pg-table/latest
            minio-host:library-checker-project/minio-host/latest
            minio-id:library-checker-project/minio-id/latest
            minio-secret:library-checker-project/minio-secret/latest
            minio-bucket:library-checker-project/${{ inputs.env }}-minio-bucket/latest
            minio-public-bucket:library-checker-project/${{ inputs.env }}-minio-public-bucket/latest
            discord-webhook:library-checker-project/${{ inputs.env }}-discord-announcement-webhook/latest

      - id: build-uploader
        name: Build Uploader
        working-directory: ./uploader
        run: go build .

      - id: download-cloud-sql-proxy
        working-directory: ./uploader
        run: |
          curl -o cloud-sql-proxy https://storage.googleapis.com/cloud-sql-connectors/cloud-sql-proxy/v2.1.2/cloud-sql-proxy.linux.amd64
          chmod +x ./cloud-sql-proxy

      - id: deploy-problems
        name: Deploy Problems
        working-directory: ./uploader
        run: >
          ./cloud-sql-proxy library-checker-project:asia-northeast1:library-checker-sql &
          python3 upload.py
        env:
          PG_USER: "${{ steps.secrets.outputs.pg-user }}"
          PG_PASS: "${{ steps.secrets.outputs.pg-pass }}"
          PG_TABLE: "${{ steps.secrets.outputs.pg-table }}"
          MINIO_HOST: "${{ steps.secrets.outputs.minio-host }}"
          MINIO_ID: "${{ steps.secrets.outputs.minio-id }}"
          MINIO_SECRET: "${{ steps.secrets.outputs.minio-secret }}"
          MINIO_BUCKET: "${{ steps.secrets.outputs.minio-bucket }}"
          MINIO_PUBLIC_BUCKET: "${{ steps.secrets.outputs.minio-public-bucket }}"
          DISCORD_WEBHOOK: "${{ steps.secrets.outputs.discord-webhook }}"
          FORCE_UPLOAD: "${{ inputs.force }}"
