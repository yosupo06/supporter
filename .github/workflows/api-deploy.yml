name: API-Deploy

on:
  workflow_call:
    inputs:
      env:
        type: string
        required: true
  workflow_dispatch:
    inputs:
      env:
        type: string
        default: dev
        description: environment of deploy

concurrency:
  group: ${{ inputs.env }}-api-deploy
  cancel-in-progress: true

jobs:
  api-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v3

    - id: auth
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: projects/190778459730/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
        service_account: cloud-run-deployer@library-checker-project.iam.gserviceaccount.com
        token_format: access_token
    
    - uses: docker/login-action@v1
      with:
        registry: asia.gcr.io
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - id: gen-protoc
      name: Generate protoc
      run: ./api/gen_protoc.sh

    - id: build-docker
      name: Build docker image
      run: docker build -t asia.gcr.io/library-checker-project/${{ inputs.env }}-api -f Dockerfile.API .

    - id: push-docker
      name: Push docker image
      run: docker push asia.gcr.io/library-checker-project/${{ inputs.env }}-api

    # TODO: migrate to google-github-actions/deploy-cloudrun@v0
    - id: setup-cloud-sdk
      name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    - id: deploy-grpcweb-api
      name: Deploy API(gRPC) to Cloud Run
      run: >
        gcloud run deploy
        ${{ inputs.env }}-api-grpcweb
        --image=asia.gcr.io/library-checker-project/${{ inputs.env }}-api
        --args=""
        --platform=managed
        --region=asia-northeast1
        --add-cloudsql-instances=library-checker-sql
        --set-env-vars=PG_HOST=/cloudsql/library-checker-project:asia-northeast1:library-checker-sql
        --set-secrets=PG_TABLE=${{ inputs.env }}-pg-table:latest,PG_USER=${{ inputs.env }}-pg-user:latest,PG_PASS=${{ inputs.env }}-pg-pass:latest,HMAC_KEY=${{ inputs.env }}-hmac-key:latest
        --service-account=cloud-run-api@library-checker-project.iam.gserviceaccount.com
        --max-instances=10
